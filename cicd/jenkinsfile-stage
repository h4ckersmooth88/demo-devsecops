pipeline {
    agent any
   
    stages{
         
	stage('DAST Nikto'){
		steps{
			echo "Scan use Nikto"
			//sh "docker run --rm --add-host devsecops-stage-devsecops-stage.apps-crc.testing:192.168.1.137 -v \$(pwd):/tmp alpine/nikto -h devsecops-stage-devsecops-stage.apps-crc.testing > nikto.txt  || true"
			sh "/usr/local/bin/nikto.pl --o nikto_scan_result.html -Format html -h http://devsecops-stage-devsecops-stage.apps-crc.testing"
		    	archiveArtifacts artifacts: 'nikto_scan_result.html', onlyIfSuccessful: true //fingerprint: true
		}
	}
	stage('DAST Owasp Zap'){
		steps{
			echo "Scan use Owasp ZAP"
			//sh "docker run --add-host devsecops-stage-devsecops-stage.apps-crc.testing:192.168.1.137 --rm  -v \$(pwd):/tmp owasp/zap2docker-stable zap-baseline.py -t http://devsecops-stage-devsecops-stage.apps-crc.testing"
			//sh "docker run --rm --add-host devsecops-stage-devsecops-stage.apps-crc.testing:192.168.1.137 -v \$(pwd):/tmp owasp/zap2docker-stable zap-baseline.py -t http://devsecops-stage-devsecops-stage.apps-crc.testing > zap.txt  || true"
               		 sh "echo \$(pwd)"
                	 sh "chmod 777 \$(pwd)"
                	 sh "docker run --rm zaproxy/zap-stable zap-baseline.py -t http://192.168.1.13:10007 > zap-output.txt || true"
			archiveArtifacts artifacts: 'zap-output.txt', onlyIfSuccessful: true //fingerprint: true
		}
	}

	stage('DAST NMAP'){
		steps{
			echo "Scan use NMAP"
			//sh "docker run --rm --add-host devsecops-stage-devsecops-stage.apps-crc.testing:192.168.1.137  -v \$(pwd):/tmp uzyexe/nmap devsecops-stage-devsecops-stage.apps-crc.testing > nmap_out.txt  || true"
			sh "/usr/bin/nmap -v --script vuln devsecops-stage-devsecops-stage.apps-crc.testing -oX nmap_out.xml || true"
		    	archiveArtifacts artifacts: 'nmap_out.xml', onlyIfSuccessful: true //fingerprint: true
		}
	}
    }
}

